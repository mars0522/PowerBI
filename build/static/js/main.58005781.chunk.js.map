{"version":3,"sources":["GoogleAnalytics.js","Images/loaderpreovp.gif","MeAndMyShowReport.js","MeAndMyCardHeader.js","Aes.js","Home.js","ShowReport.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["designation","vertical","department","funcarea","employeeid","Event","event","name","value","category","ReactGA","set","dimension1","dimension2","dimension3","dimension4","dimension5","action","label","MeAndMyShowReport","rep2","pass_empid","pass_AK","length","className","REPORT_NAME","FK_IIL_MOD_FNS_ID","map","row","MenuItem","method","onSubmit","e","REPORT_MONTH","target","type","WORKSPACE_ID","REPORT_ID","USER_NAME","console","log","repId","userName","overrider","AK","OVERRIDER_TILL_EMP","undefined","url","encoded","btoa","to","MeAndMyCardHeader","repos","classes","expanded","handlePopoverOpen","params","p_empid","p_AK","CardHeader","avatar","Avatar","title","Tooltip","REPORT_DESCRIPTION","Typography","gutterBottom","variant","component","style","fontSize","textAlign","IconButton","clsx","expand","expandOpen","REPORT_CAT_MAPPING_ID","onClick","aria-expanded","aria-label","REPORT_TYPE","aes","textToEncrypt","text","CryptoJS","enc","Utf8","parse","Key","IV","AES","encrypt","keySize","iv","mode","CBC","padding","pad","Pkcs7","toString","initialize","groupBy","data","key","reduce","acc","x","Home","getUrlParameter","getUrlVarsBase64","replace","results","RegExp","exec","atob","decodeURIComponent","url1","encoded1","url2","encoded2","state","reports","monthrep","empid","loading","anchorEl","open","freeze","overrider_AK","getcategory","bind","id","this","setState","a","fetch","then","res","json","result","Toastr","error","vars","window","location","href","m","variable","search","substring","split","i","pair","response","t","validate","status","employeeDetails","DESIGNATIONNAME","VERTICALNAME","IIL_DEPT_NAME","FUNCTIONALAREANAME","pageview","verifyToken","src","LoaderImage","position","left","top","transform","alt","color","marginTop","borderLeft","borderRight","backgroundColor","reportName","props","Boolean","Object","entries","report","Grid","container","justify","spacing","item","xs","sm","md","Card","height","root","CardActionArea","Popover","popover","paper","onClose","anchorOrigin","horizontal","transformOrigin","React","Component","withStyles","theme","maxWidth","border","boxShadow","margin","media","paddingTop","marginLeft","transition","transitions","create","duration","shortest","background","fontFamily","join","fontWeight","marginBottom","withTheme","ShowReport","datasetId","embedUrl","authenticationToken","authorizationToken","tableName","columnName","reportId","workspaceId","subordinates","stopRendering","getAuthenticationToken","username","formData","FormData","append","axios","headers","getSubordinates","getAuthorizationToken","reqBody","datasets","Authorization","post","getEmbedUrl","get","handleDataSelected","handleReportLoad","numberArray","stringArray","push","parseInt","filter1","$schema","table","column","operator","values","filterType","models","FilterType","BasicFilter","requireSingleSelection","setFilters","catch","errors","setFullscreen","fullscreen","handleReportRender","handlePageChange","handleTileClicked","apiResponse1","apiResponse","token","data1","lowerTrail","employeeLowerTrail","forEach","ele","EMPLOYEEID","reportStyle","width","screen","Fragment","tokenType","accessToken","embedId","reportMode","extraSettings","filterPaneEnabled","navContentPaneEnabled","hideErrors","onLoad","onRender","onSelectData","onPageChange","onTileClicked","onSave","handleReportSave","onButtonClicked","NotFound","fontStyle","App","useLocation","history","useHistory","useEffect","query","URLSearchParams","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58005781.chunk.js","sourcesContent":["import ReactGA from \"react-ga\";\r\n\r\nlet designation = \"\";\r\nlet vertical = \"\";\r\nlet department = \"\";\r\nlet funcarea = \"\";\r\nlet employeeid = \"\";\r\n\r\n\r\nexport const PageView = () => {\r\n    ReactGA.pageview(\"React/PowerBI\");\r\n}\r\n\r\nexport const initGA = (Designation,Vertical,Department,Funcarea,EmployeeId) => {\r\n    designation = Designation\r\n    vertical = Vertical\r\n    department = Department\r\n    funcarea = Funcarea\r\n    employeeid =EmployeeId\r\n};\r\n\r\nexport const Event = (event,name, value=1) => {\r\n    let category = vertical + '_' + department + '_' + funcarea + '_' + designation;\r\n    ReactGA.set({ dimension1: employeeid });//Employee\r\n    ReactGA.set({ dimension2: vertical });//Vertical\r\n    ReactGA.set({ dimension3: department });//Department\r\n    ReactGA.set({ dimension4: funcarea });//FunctionalArea\r\n    ReactGA.set({ dimension5: designation });//Designation\r\n    ReactGA.event({\r\n        category: category,\r\n        action: 'PowerBI_Click',\r\n        label: 'PowerBi_'+name,\r\n        value: value\r\n    });\r\n};","export default __webpack_public_path__ + \"static/media/loaderpreovp.17269b86.gif\";","import React from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\nimport { PageView, initGA, Event } from \"./GoogleAnalytics\";\r\nconst MeAndMyShowReport = ({ rep2, category,pass_empid, pass_AK }) => {\r\n    // rep2 is an array of monthly reports\r\n    // console.log(\"Showreport: \", rep2);\r\n    if (rep2.length > 1) {\r\n      return (\r\n        <div>\r\n          <ul>\r\n            <span>\r\n              <h4 className=\"heading1\">{rep2[0].REPORT_NAME}</h4>\r\n            </span>\r\n\r\n            {rep2[0].FK_IIL_MOD_FNS_ID !== \"1243\" &&\r\n            rep2[0].FK_IIL_MOD_FNS_ID !== \"1194\" &&\r\n            rep2[0].FK_IIL_MOD_FNS_ID !== \"1193\" &&\r\n            rep2[0].FK_IIL_MOD_FNS_ID !== \"1195\" &&\r\n            rep2[0].FK_IIL_MOD_FNS_ID !== \"1242\" &&\r\n            rep2[0].FK_IIL_MOD_FNS_ID !== \"1247\"\r\n              ? rep2.map((row) => {\r\n                  return (\r\n                    <MenuItem>\r\n                      <form\r\n                        action=\"https://weberp6.intermesh.net:444/reports/powerbi/getreport\"\r\n                        method=\"post\"\r\n                        onSubmit={(e) => {\r\n                          Event(\r\n                            \"ReportClick\",\r\n                            category +\r\n                              \"_\" +\r\n                              rep2[0].REPORT_NAME +\r\n                              \"_\" +\r\n                              row.REPORT_MONTH\r\n                          );\r\n                        }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <button\r\n                          type=\"submit\"\r\n                          name=\"submit\"\r\n                          value={row.REPORT_MONTH}\r\n                          className=\"btn-link\"\r\n                        >\r\n                          {row.REPORT_MONTH}\r\n                        </button>\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"reportname\"\r\n                          value={row.REPORT_NAME}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"workspaceid\"\r\n                          value={row.WORKSPACE_ID}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"reportid\"\r\n                          value={row.REPORT_ID}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"username\"\r\n                          value={row.USER_NAME}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"AK\"\r\n                          value={pass_AK}\r\n                        />\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"empid\"\r\n                          value={pass_empid}\r\n                        />\r\n                      </form>\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              : rep2.map((row) => {\r\n                  console.log(\"Row:\", row);\r\n                  const repId = row.REPORT_ID;\r\n                  const userName = row.USER_NAME;\r\n                let overrider = pass_empid;\r\n                let AK = pass_AK;\r\n                  // let AK = this.state.AK;\r\n                  // let flag = 0\r\n\r\n                  if (\r\n                    row.OVERRIDER_TILL_EMP !== \"-999\" &&\r\n                    row.OVERRIDER_TILL_EMP !== \"0\" &&\r\n                    row.OVERRIDER_TILL_EMP !== undefined\r\n                  ) {\r\n                    overrider = row.OVERRIDER_TILL_EMP;\r\n                  }\r\n\r\n                  \r\n                  let url = `https://weberp6.intermesh.net:444/reports/powerbi/getreport?reportid=${repId}&username=${userName}&empid=${overrider}&tableName=Structure&columnName=Employee%20ID&AK=${AK}`;\r\n                  let encoded = btoa(url);\r\n                  \r\n                  return (\r\n                    <MenuItem>\r\n                      <Link to={`/showreport?X=${encoded}`}>\r\n                        <button\r\n                          type=\"submit\"\r\n                          name=\"submit\"\r\n                          value={row.REPORT_MONTH}\r\n                          className=\"btn-link\"\r\n                        >\r\n                          {row.REPORT_MONTH}\r\n                        </button>\r\n                      </Link>\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n};\r\n  \r\nexport default MeAndMyShowReport;","import React from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\nimport { PageView, initGA, Event } from \"./GoogleAnalytics\";\r\nimport AES from \"./Aes\";\r\nconst MeAndMyCardHeader = ({ rep2, repos, category, classes, expanded,params,handlePopoverOpen, p_empid, p_AK}) => {\r\n\r\n  if (rep2.length > 1) {\r\n    // for monthly reports\r\n    console.log(\r\n      \"for monthly reports section in running in cardhearder function\"\r\n    );\r\n\r\n    return (\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar className={classes.avatar}>\r\n            <DescriptionIcon />\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Tooltip title={rep2[0].REPORT_DESCRIPTION}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h3\"\r\n              className={classes.name}\r\n              style={{ fontSize: \"21px\", textAlign: \"left\" }}\r\n            >\r\n              {repos}\r\n            </Typography>\r\n          </Tooltip>\r\n        }\r\n        action={\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded === rep2[0].REPORT_CAT_MAPPING_ID,\r\n            })}\r\n            onClick={(e) =>\r\n              handlePopoverOpen(\r\n                e,\r\n                rep2[0].REPORT_CAT_MAPPING_ID,\r\n                rep2,\r\n                category\r\n              )\r\n            }\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        }\r\n      />\r\n    );\r\n  } else {\r\n    if (rep2[0].REPORT_TYPE !== \"ERP\") {\r\n      // for single reports\r\n      console.log(\"For single report is running in the cardheader else part\");\r\n      \r\n\r\n      if (\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1243\" ||\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1194\" ||\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1193\" ||\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1195\" ||\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1242\" ||\r\n        rep2[0].FK_IIL_MOD_FNS_ID === \"1247\"\r\n      ) {\r\n        console.log(\"rep: \", rep2);\r\n        const repId = rep2[0].REPORT_ID;\r\n        const userName = rep2[0].USER_NAME;\r\n        let overrider = p_empid;\r\n        let AK = p_AK;\r\n        \r\n        if (\r\n          rep2[0].OVERRIDER_TILL_EMP !== \"-999\" &&\r\n          rep2[0].OVERRIDER_TILL_EMP !== \"0\" &&\r\n          rep2[0].OVERRIDER_TILL_EMP !== undefined\r\n        ) {\r\n          overrider = rep2[0].OVERRIDER_TILL_EMP;\r\n        }\r\n\r\n        let url = `https://weberp6.intermesh.net:444/reports/powerbi/getreport?reportid=${repId}&username=${userName}&empid=${overrider}&tableName=Structure&columnName=Employee%20ID&AK=${AK}`;\r\n        let encoded = btoa(url);\r\n\r\n        return (\r\n          <Link to={`/showreport?X=${encoded}`} >\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar className={classes.avatar}>\r\n                  <DescriptionIcon />\r\n                </Avatar>\r\n              }\r\n              title={\r\n                <Tooltip title={rep2[0].REPORT_DESCRIPTION}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h3\"\r\n                    className={classes.name}\r\n                    style={{ fontSize: \"21px\", textAlign: \"left\" }}\r\n                  >\r\n                    {repos}\r\n                  </Typography>\r\n                </Tooltip>\r\n              }\r\n            ></CardHeader>\r\n          </Link>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <form\r\n          action=\"https://weberp6.intermesh.net:444/reports/powerbi/getreport\"\r\n          method=\"post\"\r\n          onSubmit={(e) => {\r\n            Event(\r\n              \"ReportClick\",\r\n              category + \"_\" + rep2[0].REPORT_NAME + \"_\" + rep2[0].REPORT_MONTH\r\n            );\r\n          }}\r\n         \r\n        >\r\n          <button type=\"submit\" name=\"submit\" value=\"\" className=\"btn-link\">\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar className={classes.avatar}>\r\n                  <DescriptionIcon />\r\n                </Avatar>\r\n              }\r\n              title={\r\n                <Tooltip title={rep2[0].REPORT_DESCRIPTION}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h3\"\r\n                    className={classes.name}\r\n                    style={{ fontSize: \"21px\", textAlign: \"left\" }}\r\n                  >\r\n                    {repos}\r\n                  </Typography>\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </button>\r\n          <input type=\"hidden\" name=\"reportname\" value={rep2[0].REPORT_NAME} />\r\n          <input\r\n            type=\"hidden\"\r\n            name=\"workspaceid\"\r\n            value={rep2[0].WORKSPACE_ID}\r\n          />\r\n          <input type=\"hidden\" name=\"reportid\" value={rep2[0].REPORT_ID} />\r\n          <input type=\"hidden\" name=\"username\" value={rep2[0].USER_NAME} />\r\n          <input type=\"hidden\" name=\"AK\" value={p_AK} />\r\n          <input type=\"hidden\" name=\"empid\" value={p_empid} />\r\n        </form>\r\n      );\r\n    } else {\r\n      //for erp reports\r\n      var aes = AES(\"reportid=\" + rep2[0].WORKSPACE_ID);\r\n      var url = \"https://weberp.intermesh.net\" + rep2[0].REPORT_ID + aes;\r\n      return (\r\n        <form\r\n          action={url}\r\n          method=\"post\"\r\n          onSubmit={(e) => {\r\n            Event(\"ReportClick\", category + \"_\" + rep2[0].REPORT_NAME);\r\n          }}\r\n          target=\"_blank\"\r\n        >\r\n          <button type=\"submit\" name=\"submit\" value=\"\" className=\"btn-link\">\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar className={classes.avatar}>\r\n                  <DescriptionIcon />\r\n                </Avatar>\r\n              }\r\n              title={\r\n                <Tooltip title={rep2[0].REPORT_DESCRIPTION}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h3\"\r\n                    className={classes.name}\r\n                    style={{ fontSize: \"21px\", textAlign: \"left\" }}\r\n                  >\r\n                    {repos}\r\n                  </Typography>\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </button>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default MeAndMyCardHeader;\r\n","import CryptoJS from \"crypto-js\"\r\n\r\nexport default function Aes(textToEncrypt) {\r\n\tlet text = CryptoJS.enc.Utf8.parse(textToEncrypt);\r\n\tlet Key = CryptoJS.enc.Utf8.parse(\"5TGB&YHN7UJM(IK<5TGB&YHN7UJM(IK<\"); //secret key\r\n\tlet IV = CryptoJS.enc.Utf8.parse(\"!QAZ2WSX#EDC4RFV\"); //16 digit\r\n\treturn CryptoJS.AES.encrypt(text, Key, { keySize: 256, iv: IV, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString();\r\n}","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport ReactGA from \"react-ga\";\r\nimport { PageView, initGA, Event } from \"./GoogleAnalytics\";\r\nimport AES from \"./Aes\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport LoaderImage from \"./Images/loaderpreovp.gif\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MeAndMyShowReport from \"./MeAndMyShowReport\";\r\nimport MeAndMyCardHeader from \"./MeAndMyCardHeader\";\r\nReactGA.initialize(\"UA-28761981-1\"); //GA Tracking\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    maxWidth: 450,\r\n    border: \"grey solid 1px\",\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgb(0 0 0 / 14%), 0 3px 1px -2px rgb(0 0 0 / 12%), 0 1px 5px 0 rgb(0 0 0 / 20%);\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\r\n    },\r\n    margin: \"-8px 10px 8px 10px\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    background: \"#337ab7;\",\r\n  },\r\n  name: {\r\n    fontFamily: ['\"Calibri\"'].join(\",\"),\r\n    fontWeight: \"550\",\r\n    marginBottom: \"0px\",\r\n  },\r\n  popover: {\r\n    backgroundColor: \"rgba(0,0,30,0.4)\",\r\n    spacing: \"100\",\r\n  },\r\n  paper: {},\r\n});\r\n\r\nfunction groupBy(data, key) {\r\n  return data.reduce((acc, x) => {\r\n    acc[x[key]] = [...(acc[x[key]] || []), x];\r\n    return acc;\r\n  }, {});\r\n}\r\n\r\nclass Home extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.url1 = \"\";\r\n    this.encoded1 = \"\";\r\n    this.url2 = \"\";\r\n    this.encoded2 = \"\";\r\n\r\n    this.state = {\r\n      reports: [],\r\n      monthrep: [],\r\n      empid: 0,\r\n      AK: \"\",\r\n      expanded: false,\r\n      loading: \"initial\",\r\n      anchorEl: null,\r\n      open: false,\r\n      freeze: 0,\r\n      overrider: 0,\r\n      overrider_AK: \"\",\r\n    };\r\n    this.getcategory = this.getcategory.bind(this);\r\n    this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\r\n  }\r\n  //open and close popup\r\n  handlePopoverOpen(event, id, rep2, category) {\r\n    if ((rep2 && rep2.length !== 1) || !rep2) {\r\n      this.setState({\r\n        expanded: this.state.expanded ? null : id,\r\n        anchorEl: this.state.anchorEl === event.target ? null : event.target,\r\n      });\r\n    }\r\n  }\r\n  // function to get all the reports from the api\r\n  async getcategory(empid, AK) {\r\n    if (\r\n      !process.env.REACT_APP_REACTENV ||\r\n      process.env.REACT_APP_REACTENV === \"development\"\r\n    ) {\r\n      var url =\r\n        \"http://merp.intermesh.net/index.php/erpreport/report/display?empid=\" +\r\n        empid +\r\n        \"&AK=\" +\r\n        AK;\r\n    } else {\r\n      var url =\r\n        \"https://merp.intermesh.net/index.php/erpreport/report/display?empid=\" +\r\n        empid +\r\n        \"&AK=\" +\r\n        AK;\r\n    }\r\n    try {\r\n      await fetch(url, {\r\n        mode: \"cors\",\r\n        method: \"post\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then(\r\n          (result) => {\r\n            if (result[\"status\"] === 200) {\r\n              this.setState({\r\n                reports: result.data,\r\n                loading: \"false\",\r\n              });\r\n            } else {\r\n              Toastr.error(result[\"message\"]);\r\n              this.setState({\r\n                loading: \"false\",\r\n                freeze: 1,\r\n              });\r\n            }\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              loading: \"false\",\r\n              freeze: 1,\r\n            });\r\n            console.log(error);\r\n            Toastr.error(\"There is some error while fetching the data\");\r\n            //console.log(\"There is some error while fetching the data\");\r\n          }\r\n        );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  getUrlParameter = (name) => {\r\n    let params = this.getUrlVarsBase64()[\"W\"];\r\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n    let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n    let results = regex.exec(atob(params));\r\n    return results === null\r\n      ? \"\"\r\n      : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n  };\r\n\r\n  getUrlVarsBase64() {\r\n    var vars = {};\r\n    var parts = window.location.href.replace(\r\n      /[?&]+([^=&]+)=([^&]*)/gi,\r\n      function (m, key, value) {\r\n        vars[key] = value;\r\n      }\r\n    );\r\n    return vars;\r\n  }\r\n  getQueryVariable(variable) {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split(\"=\");\r\n      if (pair[0] == variable) {\r\n        return pair[1];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async fetchOverrider(overrider) {\r\n    let response = await fetch(\r\n      `https://merp.intermesh.net/index.php/Login/loginotpgeneration?usertype=999&display=-1&empid=${overrider}`\r\n    );\r\n    let data = await response.json();\r\n\r\n    console.log(\"AK running :\", data.t);\r\n\r\n    return data;\r\n  }\r\n  // api to verify token and set google anaytics paramters\r\n  async verifyToken(empid, AK) {\r\n    if (AK.length > 0) {\r\n      let validate = await fetch(\r\n        \"https://merp.intermesh.net/index.php/Userlisting/Employeedetails?empid=\" +\r\n          empid +\r\n          \"&AK=\" +\r\n          AK\r\n      );\r\n      let status = await validate.json();\r\n      if (status.status === \"200\") {\r\n        let designation = status.data.employeeDetails[0].DESIGNATIONNAME;\r\n        let vertical = status.data.employeeDetails[0].VERTICALNAME;\r\n        let department = status.data.employeeDetails[0].IIL_DEPT_NAME;\r\n        let funcarea = status.data.employeeDetails[0].FUNCTIONALAREANAME;\r\n        initGA(designation, vertical, department, funcarea, empid);\r\n      } else {\r\n        Toastr.error(\"You are not authorised to view this page\");\r\n        this.setState({\r\n          loading: false,\r\n          freeze: 1,\r\n        });\r\n        return false;\r\n      }\r\n    } else {\r\n      Toastr.error(\"You are not authorised to view this page. AK problem\");\r\n      this.setState({\r\n        loading: false,\r\n        freeze: 1,\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    PageView(); // GA to track page view\r\n  }\r\n\r\n  async componentWillMount() {\r\n    //console.log(\"Env : \" + process.env.REACT_APP_REACTENV);\r\n    this.setState({ loading: \"true\" }); // to show loader\r\n    var empid;\r\n    var AK;\r\n    empid = this.getUrlParameter(\"empid\");\r\n    AK = this.getUrlParameter(\"AK\");\r\n    this.setState({\r\n      empid: empid,\r\n      AK: AK,\r\n    });\r\n    await this.getcategory(empid, AK);\r\n    await this.verifyToken(empid, AK);\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.loading === \"true\") {\r\n      return (\r\n        <img\r\n          src={LoaderImage}\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          alt=\"Loader\"\r\n        />\r\n      );\r\n    }\r\n    if (this.state.reports.length === 0 && this.state.freeze !== 1)\r\n      return (\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"#2e3192\",\r\n            marginTop: \"16px\",\r\n            borderLeft: \"6px solid red\",\r\n            borderRight: \"6px solid red\",\r\n            backgroundColor: \"#fdd\",\r\n          }}\r\n        >\r\n          <h3>\r\n            Restriction! You don't have permission for any of the reports.\r\n            Please take permission to access reports.\r\n          </h3>\r\n        </div>\r\n      );\r\n    const reportName = groupBy(this.state.reports, \"REPORT_TYPE\");\r\n    // group json data absed on report_type\r\n\r\n    let params = this.getUrlVarsBase64()[\"W\"];\r\n\r\n\r\n    const { classes } = this.props;\r\n    const { anchorEl, expanded } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n    return (\r\n      <div className=\"app\">\r\n        {Object.entries(reportName).map(([name, rep1]) => {\r\n          const reports = groupBy(rep1, \"CATEGORY_NAME\"); // group json data based on category\r\n\r\n          return (\r\n            <div className=\"header-border mt-4\">\r\n              <span>\r\n                <h1 className=\"heading\">{name} Reports (Dev) </h1>\r\n              </span>\r\n              {Object.entries(reports).map(([category, rep]) => {\r\n                const report = groupBy(rep, \"REPORT_NAME\"); // group jsaon data based on report name\r\n                return (\r\n                  <div className=\"dep\">\r\n                    <h2>\r\n                      {\" \"}\r\n                      <span className=\"dep-name\">\r\n                        {category === \"ERP\" ? \"\" : category}\r\n                      </span>\r\n                    </h2>\r\n\r\n                    <Grid container justify=\"flex-start\" spacing={2}>\r\n                      {Object.entries(report).map(([repos, rep2]) => {\r\n                        return (\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={6}\r\n                            md={3}\r\n                            key={rep2[0].REPORT_CAT_MAPPING_ID}\r\n                          >\r\n                            <Card\r\n                              style={{ height: \"100%\" }}\r\n                              className={classes.root}\r\n                              onClick={(e) =>\r\n                                this.handlePopoverOpen(\r\n                                  e,\r\n                                  rep2[0].REPORT_CAT_MAPPING_ID,\r\n                                  rep2,\r\n                                  category\r\n                                )\r\n                              }\r\n                            >\r\n                              <CardActionArea>\r\n                                {/*cardheader(rep2, repos, category)*/}\r\n                                <MeAndMyCardHeader\r\n                                  rep2={rep2}\r\n                                  repos={repos}\r\n                                  category={category}\r\n                                  classes={classes}\r\n                                  expanded={expanded}\r\n                                  params = {params}\r\n                                  handlePopoverOpen={this.handlePopoverOpen}\r\n                                  p_empid={this.state.empid}\r\n                                  p_AK = {this.state.AK}\r\n                                />\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Popover\r\n                              className={classes.popover}\r\n                              classes={{\r\n                                paper: classes.paper,\r\n                              }}\r\n                              open={expanded === rep2[0].REPORT_CAT_MAPPING_ID}\r\n                              onClose={this.handlePopoverOpen}\r\n                              anchorEl={anchorEl}\r\n                              anchorOrigin={{\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"right\",\r\n                              }}\r\n                              transformOrigin={{\r\n                                vertical: \"top\",\r\n                                horizontal: \"center\",\r\n                              }}\r\n                            >\r\n                              <MeAndMyShowReport\r\n                                rep2={rep2}\r\n                                category={category}\r\n                                pass_empid={this.state.empid}\r\n                                pass_AK={this.state.AK}\r\n                              />\r\n                            </Popover>\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(Home);\r\n","import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { models } from \"powerbi-client\";\r\nimport Toastr from \"toastr\";\r\n\r\nimport { Report } from \"powerbi-report-component\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nclass ShowReport extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.report = null; // to store the loaded report's object to perform operations like print, full screen etc..\r\n  }\r\n  state = {\r\n    datasetId: \"\",\r\n    embedUrl: \"\",\r\n    authenticationToken: \"\",\r\n    authorizationToken: \"\",\r\n    tableName: \"\",\r\n    columnName: \"\",\r\n    reportId: \"\",\r\n    workspaceId: \"\",\r\n    userName: \"\",\r\n    freeze: 1,\r\n    employeeid: \"\",\r\n    AK: \"\",\r\n    subordinates: [],\r\n    stopRendering: 0,\r\n  };\r\n\r\n  getUrlParameter = (name) => {\r\n    let params = this.getUrlVarsBase64()[\"X\"];\r\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n    let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\r\n    let results = regex.exec(atob(params));\r\n    return results === null\r\n      ? \"\"\r\n      : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n  };\r\n\r\n  getUrlVarsBase64() {\r\n    var vars = {};\r\n    var parts = window.location.href.replace(\r\n      /[?&]+([^=&]+)=([^&]*)/gi,\r\n      function (m, key, value) {\r\n        vars[key] = value;\r\n      }\r\n    );\r\n    return vars;\r\n  }\r\n  getQueryVariable(variable) {\r\n    var query = window.location.search.substring(1);\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split(\"=\");\r\n      if (pair[0] === variable) {\r\n        return pair[1];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAuthenticationToken = (username) => {\r\n    if (\r\n      !process.env.REACT_APP_REACTENV ||\r\n      process.env.REACT_APP_REACTENV === \"development\"\r\n    ) {\r\n      let formData = new FormData();\r\n      formData.append(\"username\", username);\r\n\r\n      const data = axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:80/trustseal/web/index.php/reports/powerbi/get-authentication-token\",\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        data: formData,\r\n      });\r\n\r\n      return data;\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"username\", username);\r\n\r\n      const data = axios({\r\n        method: \"post\",\r\n        url: \"https://weberp6.intermesh.net/reports/powerbi/get-authentication-token\",\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        data: formData,\r\n      });\r\n\r\n      return data;\r\n    }\r\n  };\r\n  getSubordinates = () => {\r\n    const empid = this.state.employeeid;\r\n\r\n    const AK = this.state.AK;\r\n\r\n    console.log(\"In getSubordinate :\");\r\n    console.log(\"empid: \", empid);\r\n    console.log(\"AK: \", AK);\r\n\r\n    const data = axios({\r\n      method: \"get\",\r\n      url: `https://merp.intermesh.net/index.php/Userlisting/Employeedetails?empid=${empid}&AK=${AK}`, // Lower Trail\r\n    });\r\n    data.then(res => console.log(\"In the getSubordinates function :\", res.data))\r\n    return data;\r\n  };\r\n  getAuthorizationToken = async () => {\r\n    const reqBody = {\r\n      datasets: [{ id: this.state.datasetId }],\r\n      reports: [{ id: this.state.reportId }],\r\n    };\r\n\r\n    const headers = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${this.state.authenticationToken}`,\r\n    };\r\n    //console.log(this.state.authenticationToken, reqBody, headers);\r\n    return axios.post(\r\n      \"https://api.powerbi.com/v1.0/myorg/GenerateToken\",\r\n      reqBody,\r\n      { headers: headers }\r\n    );\r\n  };\r\n\r\n  getEmbedUrl = () => {\r\n    const reportId = this.state.reportId;\r\n    const headers = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${this.state.authenticationToken}`,\r\n    };\r\n    return axios.get(`https://api.powerbi.com/v1.0/myorg/reports/${reportId}`, {\r\n      headers: headers,\r\n    });\r\n  };\r\n\r\n  handleDataSelected = (data) => {\r\n    // will be called when some chart or data element in your report clicked\r\n  };\r\n\r\n  handleReportLoad = async (report) => {\r\n    // will be called when report loads:\r\n    // - scripts and data received from server, visuals are rendered on the browser\r\n    // - flickering Power BI logo stops appearing but report is not fully ready to be consumed\r\n\r\n    var numberArray = [];\r\n    let stringArray = this.state.subordinates;\r\n\r\n\r\n    for (var i = 0; i < stringArray.length; i++)\r\n      numberArray.push(parseInt(stringArray[i]));\r\n    \r\n    console.log(\"Underlisting :\", numberArray.length);\r\n    const filter1 = {\r\n      $schema: \"http://powerbi.com/product/schema#basic\",\r\n      target: {\r\n        table: this.state.tableName,\r\n        column: this.state.columnName,\r\n      },\r\n      operator: \"in\",\r\n      values: numberArray,\r\n      filterType: models.FilterType.BasicFilter,\r\n      requireSingleSelection: true,\r\n    };\r\n    report.setFilters([filter1]).catch(function (errors) {\r\n      // console.log(errors);\r\n    });\r\n\r\n    this.report = report; // get the report object from callback and store it.(optional)\r\n  };\r\n\r\n\r\n\r\n  setFullscreen = () => {\r\n    if (this.report) this.report.fullscreen();\r\n  };\r\n\r\n  handleReportRender = (report) => {\r\n    // will be called when report renders:\r\n    // - visuals finish rendering\r\n    // - report is fully visible and ready for consumption\r\n\r\n    this.report = report; // get the report object from callback and store it.(optional)\r\n  };\r\n\r\n  handlePageChange = (data) => {\r\n    // will be called when pages in your report changes\r\n  };\r\n\r\n  handleTileClicked = async (data) => {\r\n    // console.log(\"Data from tile\", data);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    \r\n    this.setState({ freeze: 1 });\r\n  }\r\n  async componentDidMount() {\r\n    // all async requests here for POC , after this will be shifted to Services folder.\r\n\r\n    const employeeid = this.getUrlParameter(\"empid\");\r\n    const reportId = this.getUrlParameter(\"reportid\");\r\n    const userName = this.getUrlParameter(\"username\");\r\n    const tableName = this.getUrlParameter(\"tableName\");\r\n    const columnName = this.getUrlParameter(\"columnName\");\r\n    // const AK = this.getUrlParameter(\"AK\");\r\n    // console.log(AK);\r\n    let AK;\r\n    let response = await axios.get(`https://merp.intermesh.net/index.php/Login/loginotpgeneration?usertype=999&display=-1&empid=${employeeid}`);\r\n    AK = response.data.t;\r\n\r\n    console.log(\"ComponentDidMount in  Showreprot component\")\r\n    console.log(\"EmployeeId: \", employeeid);\r\n    console.log(\"ReportId: \", reportId);\r\n\r\n    this.setState({\r\n      employeeid,\r\n      reportId,\r\n      userName,\r\n      tableName,\r\n      columnName,\r\n      AK,\r\n    });\r\n    try {\r\n\r\n      console.log(\"Try in showreport component chala\")\r\n      const { data: authenticationToken } = await this.getAuthenticationToken(\r\n        userName\r\n      );\r\n      this.setState({ authenticationToken });\r\n      const { data: apiResponse1 } = await this.getEmbedUrl();\r\n      const { embedUrl, datasetId } = apiResponse1;\r\n      // console.log(\"Api Response in showreport component is: \", apiResponse1);\r\n      this.setState({ embedUrl, datasetId });\r\n      const { data: apiResponse } = await this.getAuthorizationToken();\r\n      const { token: authorizationToken } = apiResponse;\r\n      console.log(\"api response :\", apiResponse);\r\n      this.setState({ authorizationToken });\r\n      const { data: data1 } = await this.getSubordinates();\r\n      console.log(\"data: \", data1);\r\n\r\n      const { data: data } = data1;\r\n\r\n      const lowerTrail = [];\r\n      const dt = [...data.employeeLowerTrail];\r\n      dt.forEach((ele) => {\r\n        lowerTrail.push(ele.EMPLOYEEID);\r\n      });\r\n      // console.log(dt);\r\n      this.setState({ subordinates: lowerTrail });\r\n\r\n      this.setState({ freeze: 0 });\r\n    } catch (err) {\r\n\r\n      console.log(err);\r\n      console.log(\"Catch in showreport component chala\")\r\n      if (err.response.status >= 400 && err.response.status < 500) {\r\n        Toastr.error(\"Invalid URL parameters...\");\r\n      } else {\r\n        Toastr.error(\"Sorry for the inconvenience...\");\r\n      }\r\n\r\n      // console.log(err.response);\r\n\r\n      return;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.freeze === 1) {\r\n      return (\r\n        <img\r\n          src={\r\n            \"https://erp-reports.intermesh.net/PowerBI/static/media/loaderpreovp.17269b86.gif\"\r\n          }\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          alt=\"Loading....\"\r\n        />\r\n      );\r\n    } else {\r\n      const reportStyle = {\r\n        // style object for report component\r\n        width: \"100%\",\r\n        height: window.screen.height * 0.8,\r\n      };\r\n\r\n      const extraSettings = {\r\n        filterPaneEnabled: false, //true\r\n        navContentPaneEnabled: true, //true\r\n        hideErrors: false,\r\n        // Use this *only* when you want to override error experience i.e, use onError\r\n        // ... more custom settings\r\n      };\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <Report\r\n            tokenType=\"Embed\" // \"Aad\"\r\n            accessToken={this.state.authorizationToken} // accessToken goes here\r\n            embedUrl={this.state.embedUrl} // embedUrl goes here\r\n            embedId={this.state.reportId} // report or dashboard Id goes here\r\n            // pageName=\"\" // set as current page of the report\r\n            reportMode=\"View\" // open report in a particular mode View/Edit/Create\r\n            datasetId={this.state.datasetId} // required for reportMode = \"Create\" and optional for dynamic databinding in `report` on `View` mode\r\n            // groupId={groupId} // optional. Used when reportMode = \"Create\" and to chose the target workspace when the dataset is shared.\r\n            extraSettings={extraSettings}\r\n            //permissions=\"All\" // View, For \"Edit\" mode permissions should be \"All\"\r\n            style={reportStyle}\r\n            onLoad={this.handleReportLoad}\r\n            onRender={this.handleReportRender} // not allowed in \"Create\" mode\r\n            onSelectData={this.handleDataSelected}\r\n            onPageChange={this.handlePageChange}\r\n            onTileClicked={this.handleTileClicked}\r\n            onSave={this.handleReportSave} // works for \"Edit\" and \"Create\"\r\n            onButtonClicked={(data) => {\r\n              if (data.type === \"Bookmark\") {\r\n                this.handleReportLoad(this.report);\r\n              }\r\n            }}\r\n          ></Report>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ShowReport;\r\n","import { ArrowBackIosOutlined } from \"@material-ui/icons\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    const styles = {\r\n      heading: {\r\n        position: \"absolute\",\r\n        top: \"20%\",\r\n        left: \"45%\",\r\n        fontStyle: \"italic\",\r\n      },\r\n    };\r\n    return (\r\n      <div style={styles.heading}>\r\n        <h1>Page Not Found</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport ShowReport from \"./ShowReport\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(location.search);\r\n    if (query.get(\"W\")) {\r\n      history.push(\"/home?W=\" + query.get(\"W\"));\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/showreport\"\r\n          render={(props) => <ShowReport {...props} />}\r\n        />\r\n        <Route path=\"/home\" render={(props) => <Home {...props} />} />\r\n        <Route path=\"/\" />\r\n        <Route path=\"/not-found\" render={() => <NotFound />} />\r\n        {/* <Route path=\"/*\" component={() => <NotFound />} /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}